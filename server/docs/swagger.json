{
    "swagger": "2.0",
    "info": {
        "description": "This is WISMED V-HUB backend-api server. Updated@ 04-29-2023 09:22:48",
        "title": "WISMED V-HUB API",
        "contact": {
            "name": "API Support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "api.V-HUB.net",
    "paths": {
        "/api/admin/email": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "send email by 3rd service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user names, separator is ',' ",
                        "name": "unames",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject for email",
                        "name": "subject",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "body for email",
                        "name": "body",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "403": {
                        "description": "Fail - forbidden error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/avatar": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get any user's avatar src as base64",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user registered unique name",
                        "name": "uname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get avatar src base64"
                    },
                    "400": {
                        "description": "Fail - cannot find user via given uname"
                    },
                    "404": {
                        "description": "Fail - avatar is empty"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/field-value/{fields}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get any user some fields value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user registered unique name",
                        "name": "uname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "which user struct fields (sep by ',') want to be fetched. (fields must be IDENTICAL TO STRUCT FIELDS !!!)",
                        "name": "fields",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get info"
                    },
                    "400": {
                        "description": "Fail - cannot find user via given uname"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get any user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user registered unique name",
                        "name": "uname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get info"
                    },
                    "400": {
                        "description": "Fail - cannot find user via given uname"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/list/{fields}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "list users' info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user filter with uname wildcard(*)",
                        "name": "uname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user filter with name wildcard(*)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user filter with active status",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "which user's fields (sep by ',') want to list. if empty, return all fields",
                        "name": "fields",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "403": {
                        "description": "Fail - forbidden error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/online": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get all online users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user filter with uname wildcard(*)",
                        "name": "uname",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "403": {
                        "description": "Fail - forbidden error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/remove/{uname}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "remove an user by its uname",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uname of the user to be removed",
                        "name": "uname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - remove successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/update/{fields}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "update user's info by fields \u0026 its values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user name want to be updated",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "which user struct fields (sep by ',') want to be updated. (fields must be IDENTICAL TO STRUCT FIELDS !!!)",
                        "name": "fields",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "400": {
                        "description": "Fail - bad request error"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/bookmark/marked": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "get all bookmarked Post ids.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order[desc asc] to get Post ids ordered by event time",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/bookmark/status/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "get current login user's bookmark status for a Post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID (event id) for checking bookmark status",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get bookmark status successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/bookmark/toggle/{id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "add or remove a personal bookmark for a Post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID (event id) for toggling a bookmark",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - toggled bookmark successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/file/auth/file-items": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "get  file-items by given path or id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file ID (md5)",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get file items successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect query param id"
                    },
                    "404": {
                        "description": "Fail - not found"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/file/auth/path-content": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "get content under specific path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "year-month, e.g. 2022-05",
                        "name": "ym",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group path, e.g. group1/group2/group3",
                        "name": "gpath",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get content successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/file/auth/upload-bodydata": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "upload file action via body content.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename for uploading data from body",
                        "name": "fname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "note for uploading file; if file is image or video, 'crop:x,y,w,h' for cropping",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "add /yyyy-mm/ into storage path",
                        "name": "addym",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "1st category for uploading file",
                        "name": "group0",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "2nd category for uploading file",
                        "name": "group1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "3rd category for uploading file",
                        "name": "group2",
                        "in": "query"
                    },
                    {
                        "format": "binary",
                        "description": "file data for uploading",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - return storage path"
                    },
                    "400": {
                        "description": "Fail - file param is incorrect"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/file/auth/upload-formfile": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "upload file action via form file input.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "note for uploading file; if file is image or video, 'crop:x,y,w,h' for cropping",
                        "name": "note",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "add /yyyy-mm/ into storage path",
                        "name": "addym",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "1st category for uploading file",
                        "name": "group0",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "2nd category for uploading file",
                        "name": "group1",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "3rd category for uploading file",
                        "name": "group2",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file path for uploading",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - return storage path"
                    },
                    "400": {
                        "description": "Fail - file param is incorrect"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/interact/{action}/record/{id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interact"
                ],
                "summary": "record an action like 'Seen' of a Post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Action Name [Seen] to be added for a Post",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post ID (event id) for this action",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - added one action successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/interact/{action}/status/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interact"
                ],
                "summary": "get current login user's one action status like 'ThumbsUp', 'HeartLike', 'Seen' of a Post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Action Name [ThumbsUp, HeartLike, Seen] to be added or removed for a Post",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post ID (event id) for this action",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get one action status successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/interact/{action}/toggle/{id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interact"
                ],
                "summary": "toggle an action like 'ThumbsUp', 'HeartLike' of a Post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Action Name [ThumbsUp, HeartLike] to be added or removed for a Post",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post ID (event id) for this action",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - added or removed one action successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/manage/debug/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manage"
                ],
                "summary": "delete one Post ID from timeline.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID for deleting",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - delete successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect path param 'id'"
                    },
                    "405": {
                        "description": "Fail - invoker's role is NOT in permit group"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/manage/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manage"
                ],
                "summary": "delete one Post content.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID for deleting",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - delete successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect path param 'id'"
                    },
                    "405": {
                        "description": "Fail - invoker's role is NOT in permit group"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/manage/erase/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manage"
                ],
                "summary": "erase one Post content permanently.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID for erasing",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - erase successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect path param 'id'"
                    },
                    "405": {
                        "description": "Fail - invoker's role is NOT in permit group"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/manage/own": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manage"
                ],
                "summary": "get own Post id group in one specific time period.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "time period for query, format is 'yyyymm', e.g. '202206'. if missing, current yyyymm applies",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect query param type"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/reply/{pid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reply"
                ],
                "summary": "get specified Post Reply id group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/retrieve/all-id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Retrieve"
                ],
                "summary": "get all Post id group.",
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/retrieve/batch-id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Retrieve"
                ],
                "summary": "get a batch of Post id group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "'time'",
                        "name": "by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "recent [value] minutes for time",
                        "name": "value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect query param type"
                    },
                    "404": {
                        "description": "Fail - not found"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/retrieve/debug/all-span": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Retrieve"
                ],
                "summary": "get all Span group.",
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/retrieve/debug/cached-id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Retrieve"
                ],
                "summary": "get cached Post id group.",
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    }
                }
            }
        },
        "/api/retrieve/post": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Retrieve"
                ],
                "summary": "get one Post content.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID for its content",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get Post event successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect query param id"
                    },
                    "404": {
                        "description": "Fail - not found"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/submit/template": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submit"
                ],
                "summary": "get Post template for submission reference.",
                "responses": {
                    "200": {
                        "description": "OK - get template successfully"
                    }
                }
            }
        },
        "/api/submit/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submit"
                ],
                "summary": "submit a Post by filling its template.",
                "parameters": [
                    {
                        "description": "filled Post template json file",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "followee Post ID (empty when submitting a new post)",
                        "name": "followee",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - submit successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect Post format"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/system/tag": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "get this api service project github version tag",
                "responses": {
                    "200": {
                        "description": "OK - get its tag"
                    }
                }
            }
        },
        "/api/system/ver": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "get this api service version",
                "responses": {
                    "200": {
                        "description": "OK - get its version"
                    }
                }
            }
        },
        "/api/user/auth/avatar": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get self avatar src as base64",
                "responses": {
                    "200": {
                        "description": "OK - get avatar src base64"
                    },
                    "404": {
                        "description": "Fail - avatar is empty"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/auth/hail": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "alive user hails to server.",
                "responses": {
                    "200": {
                        "description": "OK - hail successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/auth/sign-out": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign out action.",
                "responses": {
                    "200": {
                        "description": "OK - sign-out successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/auth/uname": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get uname",
                "responses": {
                    "200": {
                        "description": "OK - got uname"
                    }
                }
            }
        },
        "/api/user/auth/upload-avatar": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "upload user's avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "whole image to upload and crop",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "image left x position for cropping",
                        "name": "left",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "image top y position for cropping",
                        "name": "top",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "cropped width",
                        "name": "width",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "cropped height",
                        "name": "height",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get avatar src base64"
                    },
                    "404": {
                        "description": "Fail - avatar cannot be fetched"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/pub/pwdrule": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get password rule for sign up",
                "responses": {
                    "200": {
                        "description": "OK - got password rule"
                    }
                }
            }
        },
        "/api/user/pub/sign-in": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign in action. if ok, got token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name or email",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "password",
                        "description": "password",
                        "name": "pwd",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - sign-in successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect password"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/pub/sign-up": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign up action, send user's basic info for registry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user name",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "user's email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user's password",
                        "name": "pwd",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - then waiting for verification code"
                    },
                    "400": {
                        "description": "Fail - invalid registry fields"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/pub/verify-email": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign up action, step 2. send back email verification code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user name",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "verification code (in user's email)",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - sign-up successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect verification code"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}