host: api.V-HUB.net
info:
  contact:
    name: API Support
  description: This is WISMED V-HUB backend-api server. Updated@ 03-31-2023 12:32:09
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: WISMED V-HUB API
  version: "1.0"
paths:
  /api/admin/email:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 'unique user names, separator is '','' '
        in: formData
        name: unames
        required: true
        type: string
      - description: subject for email
        in: formData
        name: subject
        required: true
        type: string
      - description: body for email
        in: formData
        name: body
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - list successfully
        "401":
          description: Fail - unauthorized error
        "403":
          description: Fail - forbidden error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: send email by 3rd service
      tags:
      - Admin
  /api/admin/user/list/{fields}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user filter with uname wildcard(*)
        in: query
        name: uname
        type: string
      - description: user filter with name wildcard(*)
        in: query
        name: name
        type: string
      - description: user filter with active status
        in: query
        name: active
        type: string
      - description: which user's fields (sep by ',') want to list. if empty, return
          all fields
        in: path
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - list successfully
        "401":
          description: Fail - unauthorized error
        "403":
          description: Fail - forbidden error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: list users' info
      tags:
      - Admin
  /api/admin/user/onlines:
    get:
      consumes:
      - application/json
      parameters:
      - description: user filter with uname wildcard(*)
        in: query
        name: uname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - list successfully
        "401":
          description: Fail - unauthorized error
        "403":
          description: Fail - forbidden error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get all online users
      tags:
      - Admin
  /api/admin/user/update/{fields}:
    put:
      consumes:
      - application/json
      parameters:
      - description: unique user name want to be updated
        in: formData
        name: uname
        required: true
        type: string
      - description: which user struct fields (sep by ',') want to be updated. (fields
          must be IDENTICAL TO STRUCT FIELDS !!!)
        in: path
        name: fields
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - list successfully
        "400":
          description: Fail - bad request error
        "401":
          description: Fail - unauthorized error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: update user's info by fields & its values
      tags:
      - Admin
  /api/file/auth/file-items:
    get:
      consumes:
      - application/json
      parameters:
      - description: file ID (md5)
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get file items successfully
        "400":
          description: Fail - incorrect query param id
        "404":
          description: Fail - not found
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get  file-items by given path or id.
      tags:
      - File
  /api/file/auth/path-content:
    get:
      consumes:
      - application/json
      parameters:
      - description: year-month, e.g. 2022-05
        in: query
        name: ym
        required: true
        type: string
      - description: group path, e.g. group1/group2/group3
        in: query
        name: gpath
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get content successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get content under specific path.
      tags:
      - File
  /api/file/auth/upload-bodydata:
    post:
      consumes:
      - application/octet-stream
      parameters:
      - description: filename for uploading data from body
        in: query
        name: fname
        required: true
        type: string
      - description: note for uploading file; if file is image or video, 'crop:x,y,w,h'
          for cropping
        in: query
        name: note
        type: string
      - description: add /yyyy-mm/ into storage path
        in: query
        name: addym
        required: true
        type: boolean
      - description: 1st category for uploading file
        in: query
        name: group0
        type: string
      - description: 2nd category for uploading file
        in: query
        name: group1
        type: string
      - description: 3rd category for uploading file
        in: query
        name: group2
        type: string
      - description: file data for uploading
        format: binary
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - return storage path
        "400":
          description: Fail - file param is incorrect
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: upload file action via body content.
      tags:
      - File
  /api/file/auth/upload-formfile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: note for uploading file; if file is image or video, 'crop:x,y,w,h'
          for cropping
        in: formData
        name: note
        type: string
      - description: add /yyyy-mm/ into storage path
        in: formData
        name: addym
        required: true
        type: boolean
      - description: 1st category for uploading file
        in: formData
        name: group0
        type: string
      - description: 2nd category for uploading file
        in: formData
        name: group1
        type: string
      - description: 3rd category for uploading file
        in: formData
        name: group2
        type: string
      - description: file path for uploading
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK - return storage path
        "400":
          description: Fail - file param is incorrect
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: upload file action via form file input.
      tags:
      - File
  /api/system/tag:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get its tag
      summary: get this api service project github version tag
      tags:
      - System
  /api/system/ver:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get its version
      summary: get this api service version
      tags:
      - System
  /api/user/auth/avatar:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get avatar src base64
        "404":
          description: Fail - avatar is empty
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get self avatar src as base64
      tags:
      - User
  /api/user/auth/hail:
    patch:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - hail successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: alive user hails to server.
      tags:
      - User
  /api/user/auth/sign-out:
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-out successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: sign out action.
      tags:
      - User
  /api/user/auth/uname:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - got uname
      security:
      - ApiKeyAuth: []
      summary: get uname
      tags:
      - User
  /api/user/auth/upload-avatar:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: whole image to upload and crop
        in: formData
        name: avatar
        required: true
        type: file
      - description: image left x position for cropping
        in: formData
        name: left
        type: number
      - description: image top y position for cropping
        in: formData
        name: top
        type: number
      - description: cropped width
        in: formData
        name: width
        type: number
      - description: cropped height
        in: formData
        name: height
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK - get avatar src base64
        "404":
          description: Fail - avatar cannot be fetched
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: upload user's avatar
      tags:
      - User
  /api/user/pub/pwdrule:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - got password rule
      summary: get password rule for sign up
      tags:
      - User
  /api/user/pub/sign-in:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: user name or email
        in: formData
        name: uname
        required: true
        type: string
      - description: password
        format: password
        in: formData
        name: pwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-in successfully
        "400":
          description: Fail - incorrect password
        "500":
          description: Fail - internal error
      summary: sign in action. if ok, got token
      tags:
      - User
  /api/user/pub/sign-up:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: user's email
        format: email
        in: formData
        name: email
        required: true
        type: string
      - description: user's password
        in: formData
        name: pwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - then waiting for verification code
        "400":
          description: Fail - invalid registry fields
        "500":
          description: Fail - internal error
      summary: sign up action, send user's basic info for registry
      tags:
      - User
  /api/user/pub/verify-email:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: verification code (in user's email)
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-up successfully
        "400":
          description: Fail - incorrect verification code
        "500":
          description: Fail - internal error
      summary: sign up action, step 2. send back email verification code
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
